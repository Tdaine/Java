import java.util.Scanner;

/**
 * 1. “回文串”是一个正读和反读都一样的字符串，比如“level”或者“noon”等等就是回文串。花花非常喜欢这种拥
 * 有对称美的回文串，生日的时候她得到两个礼物分别是字符串A和字符串B。现在她非常好奇有没有办法将字
 * 符串B插入字符串A使产生的字符串是一个回文串。你接受花花的请求，帮助她寻找有多少种插入办法可以使
 * 新串是一个回文串。如果字符串B插入的位置不同就考虑为不一样的办法。
 * 例如：
 * A = “aba”，B = “b”。这里有4种把B插入A的办法：
 * * 在A的第一个字母之前: "baba" 不是回文
 * * 在第一个字母‘a’之后: "abba" 是回文
 * * 在字母‘b’之后: "abba" 是回文
 * * 在第二个字母'a'之后 "abab" 不是回文
 * 所以满足条件的答案为2
 */

public class Test3_4{
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        while (input.hasNext()){
            String a = input.next();
            String b = input.next();
            int n = a.length(),m = b.length();
            int count = 0;
            for(int i = 0; i <= n; i++){
                int p = 0;
                int q = n + m -1;
                while (p <= q){
                    if(get(p,i,a,b) == get(q,i,a,b)){
                        p++;q--;
                    }else break;
                }
                if(p > q)
                    count++;
            }
            System.out.println(count);
        }
    }

    /**
     * 当a字符串下标 < 插入位置时直接返回当前下标对应的a字符串;
     * 当a字符串下标 >= 插入位置时，并且 a字符串下标没有超过拼接后的b字符串的位置（插入位置+b字符串长度），
     * 表明此时走到了b字符串范围内应该返回b字符串的元素，经过计算返回此时对应的b字符串元素
     * 否则，表明下标对应元素没有在b字符串中，应该输出a字符串的元素，经过计算求出此时对应的a字符串下标并返回元素。
     * 
     * @param index:当前元素下标
     * @param insert：要插入位置，采用的是前插
     * @param a
     * @param b
     * @return
     */
    public static char get(int index,int insert,String a,String b){//前插
        if(index < insert){
            return a.charAt(index);
        }else if(index >= insert && index < insert + b.length()){
            return b.charAt(index - insert);
        }else {
            return a.charAt(index - b.length());
        }

    }
}
