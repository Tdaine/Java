//    1. 小易去附近的商店买苹果，奸诈的商贩使用了捆绑交易，只提供6个每袋和8个每袋的包装(包装不可拆分)。
//    可是小易现在只想购买恰好n个苹果，小易想购买尽量少的袋数方便携带。如果不能购买恰好n个苹果，小易
//    将不会购买。
//    输入描述：
//    输入一个整数n，表示小易想购买n(1 ≤ n ≤ 100)个苹果

    public static int getSum(int n) {
        int sum = -1;
        int a = 0;
        int b = 0;
        int m = n / 8;//袋子数量最少
        for (int i = m; i >= 0; i--) {
            if ((n - 8 * i) % 6 == 0) {//最理想：用最少的袋子装最多的苹果，6个的装满，8个的也装满
                b = (n - 8 * i) / 6;
                a = i;
                sum = a + b;
                break;
            }
        }
        return sum;
    }
