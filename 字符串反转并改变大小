//    2.
//    对于一个给定的字符串，我们需要在线性(也就是O(n))的时间里对它做一些变形。首先这个字符串中包含着一
//    些空格，就像"Hello
//    World"一样，然后我们要做的是把着个字符串中由空格隔开的单词反序，同时反转每个字符的大小写。比
//    如"Hello World"变形后就变成了"wORLD hELLO"。
public static String toStrArr(String s, int n) {
    char[] cArr = s.toCharArray();
    reverse(cArr, 0, n - 1); //对整个字符串进行反转，比如：this is a sample 变成elpmas a si siht
    reverseCase(cArr, n); //大小写字母变换
    int begin = 0; //用begin来记录字符串中不是空格的第一个字符下标
    for (int i = 0; i < n; i++) {//找出第一个不是空格的字符下标
        if (cArr[i] != ' ') {
            begin = i;
            break;
        }
    }
    for (int i = begin; i < n; i++) {
        if (cArr[i] == ' ') {
            reverse(cArr, begin, i - 1);//对每个单词进行翻转
            begin = i + 1;
        }
    }
    reverse(cArr, begin, n - 1); //对最后一个单词反转
    String result = new String(cArr);
    System.out.println(result);
    return result;
}
    public static void reverse(char[] cArr, int front, int end) {
        char temp;
        while (front < end) {
            temp = cArr[front];
            cArr[front] = cArr[end];
            cArr[end] = temp;
            front++;
            end--;
        }
    }
    public static void reverseCase(char[] cArr, int n) {
        for (int i = 0; i < n; i++) {
            if (cArr[i] != ' ') {
                if (cArr[i] < 97) { //也就是大写字母
                    cArr[i] += 32;
                } else {
                    cArr[i] -= 32;
                }
            }
        }
    }
